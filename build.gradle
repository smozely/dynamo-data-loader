import com.wiredforcode.gradle.spawn.*

buildscript {
    repositories {
        maven {
            url 'https://dl.bintray.com/smozely/maven'
        }
        jcenter()
    }
    dependencies {
        classpath 'org.ajoberstar:grgit:1.4.+'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.3.1"
    id "com.wiredforcode.spawn" version "0.6.0"

    id 'groovy'
    id 'maven-publish'
}

repositories {
    maven {
        url 'https://dl.bintray.com/smozely/maven'
    }
    jcenter()
    mavenCentral()
}

ext {
    git = org.ajoberstar.grgit.Grgit.open()
    gitVersionName = "${git.describe()}"
}

group = 'com.smozely'
version = ext.gitVersionName


configurations {
    dynamolocal
}

dependencies {
    compile('com.amazonaws:aws-java-sdk:1.10.26')
    compile('com.google.guava:guava:18.0')

    testCompile('junit:junit:4.12')
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4')
    testCompile('org.codehaus.groovy:groovy-all:2.4.5')
    testCompile('org.assertj:assertj-core:3.1.0')

    dynamolocal 'com.jcabi:DynamoDBLocal:2015-07-16'
}

task extractLocalDynamo(type: Copy) {
    from {
        configurations.dynamolocal.collect { zipTree(it) }
    }
    into "$buildDir/dynamolocal/"
}

task beforeTests(type: SpawnProcessTask, dependsOn: extractLocalDynamo) {
    directory "$buildDir/dynamolocal/"
    command "java -jar DynamoDBLocal.jar -inMemory"
    ready 'Initializing DynamoDB Local with the following configuration'
}
test.dependsOn(beforeTests)

task afterTests(type: KillProcessTask, dependsOn: beforeTests) {
    directory "$buildDir/dynamolocal/"
}
afterTests.mustRunAfter beforeTests
test.finalizedBy(afterTests)

def isCiBuild() {
    return project.hasProperty("ci-build")
}

if (isCiBuild()) {
    apply plugin: 'maven-publish'
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
    }

    bintray {
        user = BINTRAY_USER_NAME
        key  = BINTRAY_API_KEY
        publications = ['mavenJava']
        publish = true
        pkg {
            name = 'dynamo-data-loader'
            repo = 'maven'
        }
    }
}